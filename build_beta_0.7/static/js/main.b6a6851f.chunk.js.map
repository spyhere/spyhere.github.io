{"version":3,"sources":["Sounds/metro_1.mp3","Sounds/metro_other.mp3","Sounds/clap01.mp3","notes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","values","concat","measureReassign","names4Beaming","beamNum","barsQuant","bars","measure","pauseValue","easyOBProb","tripletValue","easyGrouping","linkIns","linkOut","lvl","groupRest","showBeat","noteValues","whole","half","quarter","eighth","sixteenth","thirtySecond","noteValuesNames","Object","keys","noteProbability","maxNoteValue","dottedValues","dottedValuesNames","dottedProbability","maxDottedValue","groupingValues","groupingValuesNames","groupingProbability","maxGroupingValue","probability","simValIns","simValInsNames","simValInsProbability","maxSimValsIns","ind","indInner","fill","simpleK","dotsK","groupK","lvlK","arrayOfProbability","updateData","state","n","push","reverse","generatingValues","bar","remained","valuesInd","Math","round","random","forEach","x","index","length","Number","isInteger","min","safeMin","linkOutPr","generatingIndex","indInnerInner","insideValue","checkOut","some","y","remainedIns","run","indIns","indForCheck","beaming","groupingOut","ceil","fillIns","groupingIns","barGroup","measureGroup","minGroupEasy","fillGroup","coefGroup","remainedGroup","minGroup","indInnerGroup","generatingGroupingValues","String","z","unshift","minimum","tuplet","minVal","maxVal","check","easyOnB","randomInd","beamFill","beamGr","beamGrNames","tup","gr","Array","isArray","test","a","splice","RegExp","match","join","reading","arr","beatReadN","rand","beatFill","metronome","inputOpen","wholeBar","mistakes","soundArr","valInTup","thirty","App","props","bpm","beat","beatNumb","receivedVal","metronomeSwitch","mode","tick01","React","createRef","tick02","note01","beginner","bind","intermediate","expert","nextGen","beatReading","beatReadingFunc","stop","beatInput","beatInputFunc","beatInputListener","this","setState","setTimeout","console","clear","tupletState","input","metronomeFill","from","document","querySelectorAll","shift","current","volume","play","setInterval","classList","toggle","className","log","addEventListener","removeEventListener","clearTimeout","clearInterval","contains","i","sound","soundClone","cloneNode","ref","src","type","disabled","onClick","style","opacity","map","count","key","position","height","top","left","display","indI","marginRight","marginLeft","ch","link","elem","split","slice","Component","Linked","nextState","st","width","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,mOCOvCC,EAAS,CAPM,CAAC,CAAC,QAAS,cAAe,GAAG,CAAC,OAAQ,aAAc,GAAG,CAAC,UAAW,gBAAiB,GACvG,CAAC,SAAU,eAAgB,IAAK,CAAC,YAAa,kBAAmB,KAAM,CAAC,gBAAiB,sBAAuB,QAMpFC,OAAO,CALlB,CAAC,CAAC,aAAc,mBAAoB,GAAG,CAAC,YAAY,kBAAkB,GAAG,CAAC,eAAe,qBAAqB,KAC/H,CAAC,cAAc,oBAAoB,KAAM,CAAC,iBAAiB,uBAAuB,MAAO,CAAC,qBAAqB,2BAA2B,UAK1ID,EAASA,EAAOC,OAAO,CAJD,CAAC,CAAC,iBAAiB,oBAAqB,GAAG,CAAC,gBAAgB,mBAAoB,GAAG,CAAC,mBAAmB,sBAAsB,GACnJ,CAAC,kBAAkB,qBAAqB,OAKjC,IAAIC,EAAkB,CACzB,aAAgB,EAChB,eAAkB,EAClB,cAAiB,EACjB,cAAiB,EACjB,eAAkB,EAClB,YAAe,IACf,WAAc,GAGdC,EAAgB,CAAC,iCAAiC,QAClDC,EAAU,EAGVC,EAAY,EACZC,EAAO,GACPC,EAAU,EACVC,EAAa,GACbC,EAAa,GACbC,EAAe,GACfC,EAAe,IACfC,GAAU,EACVC,EAAU,EACVC,EAAM,EACNC,GAAY,EACZC,GAAW,EAIXC,EAAa,CACbC,MAAO,EACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,GACXC,aAAc,GAEdC,EAAkBC,OAAOC,KAAKT,GAE9BU,EAAkB,GAClBC,EAAe,KAKfC,EAAe,CACfX,OAAQ,GACRC,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRC,UAAW,EACXC,aAAc,GAEdO,EAAoBL,OAAOC,KAAKG,GAEhCE,EAAoB,GACpBC,EAAiB,KAKjBC,EAAiB,CACjBf,OAAQ,GACRC,KAAM,EACNC,QAAS,GACTC,OAAQ,IAERa,EAAsBT,OAAOC,KAAKO,GAElCE,EAAsB,GACtBC,EAAmB,KAKnBC,EAAc,KAGdC,EAAY,CACZpB,OAAQ,GACRC,KAAM,EACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,GACXC,aAAc,IAGdgB,EAAiBd,OAAOC,KAAKY,GAE7BE,EAAuB,GACvBC,EAAgB,KAMhBC,EAAM,EACNC,EAAW,EACXC,GAAO,EAGPC,GAAU,GACVC,GAAQ,GACRC,GAAS,IACTC,GAAO,KACPC,GAAqB,CAACJ,GAAQC,GAAMC,IAKjC,SAASG,GAAWC,GAqBvB,IAAK,IAAIC,KApBThD,EAAU+C,EAAM/C,QAChBC,EAAY8C,EAAM9C,UAClBE,EAAUL,EAAgBiD,EAAM5C,SAChCC,EAAa2C,EAAM3C,WACnBC,EAAa0C,EAAM1C,WACnBC,EAAeyC,EAAMzC,aACrBC,EAAewC,EAAMxC,aACrBC,EAAUuC,EAAMvC,QAChBC,EAAUsC,EAAMtC,QAChBC,EAAMqC,EAAMrC,IACZ+B,GAAUM,EAAMN,QAChBC,GAAQK,EAAML,MACdC,GAASI,EAAMJ,OACfhC,EAAYoC,EAAMpC,UAClBC,EAAWmC,EAAMnC,SAEjBC,EAAakC,EAAMlC,WACnBU,EAAkB,GAClBC,EAAe,KAEDJ,EAC6B,IAAnCP,EAAWO,EAAgB4B,MAC3BzB,EAAgB0B,KAAK,CAAC7B,EAAgB4B,KACtCzB,EAAgByB,GAAGC,KAAKpC,EAAWO,EAAgB4B,MAU3D,IAAK,IAAIA,KAPTxB,EAAeD,EAAgB2B,UAAU,GAAG,GAC5C3B,EAAgB2B,UAEhBzB,EAAesB,EAAMtB,aACrBE,EAAoB,GACpBC,EAAiB,KAEHF,EACiC,IAAvCD,EAAaC,EAAkBsB,MAC/BrB,EAAkBsB,KAAK,CAACvB,EAAkBsB,KAC1CrB,EAAkBqB,GAAGC,KAAKxB,EAAaC,EAAkBsB,MAUjE,IAAK,IAAIA,KAPTpB,EAAiBD,EAAkBuB,UAAU,GAAG,GAChDvB,EAAkBuB,UAElBrB,EAAiBkB,EAAMlB,eACvBE,EAAsB,GACtBC,EAAmB,KAELF,EACqC,IAA3CD,EAAeC,EAAoBkB,MACnCjB,EAAoBkB,KAAK,CAACnB,EAAoBkB,KAC9CjB,EAAoBiB,GAAGC,KAAKpB,EAAeC,EAAoBkB,MAUvE,IAAK,IAAIA,KAPThB,EAAmBD,EAAoBmB,UAAU,GAAG,GACpDnB,EAAoBmB,UAEpBhB,EAAYa,EAAMb,UAClBE,EAAuB,GACvBC,EAAgB,KAEFF,EAC2B,IAAjCD,EAAUC,EAAea,MAC1BZ,EAAqBa,KAAK,CAACd,EAAea,KACzCZ,EAAqBY,GAAGC,KAAKf,EAAUC,EAAea,MAG9DX,EAAgBD,EAAqBc,UAAU,GAAG,GAClDd,EAAqBc,UAErBjB,EAAc,CAAC,CAACV,EAAgBC,GAAc,CAACG,EAAkBC,GACjE,CAACG,EAAoBC,IACrBa,GAAqB,CAACJ,GAAQC,GAAMC,IAIhCC,GADQ,IAARlC,EACO+B,GAAQ,EAGF,IAAR/B,EACEgC,GAAM,EAIN,IAOP,SAASS,KACb,IAAIC,EAAM,GACVlD,EAAO,GACP,IAHgC,iBAI5B,IAAImD,EAAWlD,EAAUqC,GACrBc,EAAYC,KAAKC,MAAMD,KAAKE,SAAUb,IAC1CN,EAAM,KACNO,GAAmBa,SAAQ,SAACC,EAAEC,GACrBN,EAAYK,IAAQrB,GAAe,IAANA,GAAae,GAAYzD,EAAOgE,GAAO3B,EAAY2B,GAAO,GAAGC,OAAO,GAAG,GACrGvB,EAAMsB,EAEAtB,GAAa,IAANA,GAAWsB,IAAQ3B,EAAY4B,OAAO,IACnDvB,EAAM,OAKTwB,OAAOC,UAAUvB,KAAkB,IAARF,GAAeI,GAAQD,IAAaY,GAAYzD,EAAO,GAAGqC,EAAY,GAAG,GAAG4B,OAAO,GAAG,GAClHvB,EAAM,GAEAwB,OAAOC,UAAUvB,KAAkB,IAARF,GAAeI,GAAQD,KACxDH,EAAM,GAIV,IAAI0B,EAAM,KACNC,EAAU,KAEdrE,EAAO0C,GAAKoB,SAAQ,SAACC,EAAEC,GACfD,EAAE,IAAMN,IAAaW,GAAa,IAANA,IAC5BA,EAAMJ,EACNK,EAAUL,MAIlB,IAAIM,EAAa/D,EAAUqC,IAAQ,GAAKtC,EAAK2D,OAAO,EAAI5D,GAAaQ,GAAmB,IAAR6B,EAAaiB,KAAKC,MAAoB,IAAdD,KAAKE,UAAgB,KACzHS,EAAYzD,GAAWyD,IACvBF,EAAM,GAIVG,GAAgBH,EAAIxB,GAAKF,GAEzB,IAAI8B,EAyGZ,WACI,GAA0B,mBAAtBxE,EAAO0C,GAAK,GAAG,GAAyB,CAExC,OADWiB,KAAKC,MAAoB,IAAdD,KAAKE,WACfnD,EACD,EAEJ,EAGX,GADWiD,KAAKC,MAAoB,IAAdD,KAAKE,UAChBrD,EACP,OAAO,EAEX,OAAO,EArHiBiE,GAEhBC,EAAW1E,EAAO0C,GAAKC,GAAU,GAAKc,EAQ1C,GAPIlD,EAAUqC,IAAQ,IAAM5C,EAAO,GAAG2E,MAAK,SAACZ,GAAD,OAAOA,EAAE,KAAOW,OAAc1E,EAAO,GAAG2E,MAAK,SAACC,GAAD,OAAOA,EAAE,KAAOF,MAChG,IAARhC,GAAagC,EAAW,IACpB/B,EAAW0B,GAKXzB,GAAO5C,EAAO0C,GAAKC,GAAU,GAAKpC,EAAS,CAAC,IAAD,EAiNvD,SAAsBiD,EAAKlD,EAAMqC,EAAU6B,EAAe5B,GACtD,IAAIiC,EAActE,EAAUqC,EACxBkC,EAAM,EACEC,EAAS,KACb,KAAOxE,EAAUqC,GAAM,CACnB,IAAIoC,EAAgBF,EAAW,EAAJ,EAO3B,GANA9E,EAAOgF,GAAalB,SAAQ,SAACC,EAAEC,GAC3BD,EAAE,KAAOc,GAAgBE,GAAmB,IAATA,IACnCA,EAASf,MAGbc,IACIC,EAAQ,CACRvB,EAAIH,KAAK,EAAqB,IAAlBmB,EAAwB,IAAM,IAAMxE,EAAOgF,GAAaD,GAAQP,GAAgBxE,EAAOgF,GAAaD,GAAQ,KAKxHvB,EAAMyB,GAHS,EACF,EACK,GAC2BzB,GAE7ClD,EAAK+C,KAAKG,GACVZ,GAAQ5C,EAAOgF,GAAaD,GAAQ,IAI5CvB,EAAM,GACNZ,EAAO,EACPkC,EAAM,EACN,KAAOlC,IAAS5C,EAAO0C,GAAKC,GAAU,GAAKkC,GAAa,CACpDE,EAAS,KACT,IAAIC,EAAgBF,EAAW,EAAJ,EAC3B9E,EAAOgF,GAAalB,SAAQ,SAACC,EAAEC,GACvBD,EAAE,KAAO/D,EAAO0C,GAAKC,GAAU,GAAKkC,GAAgBE,GAAmB,IAATA,IAC9DA,EAASf,MAGjBc,IACIC,IACAvB,EAAIH,KAAK,CAACrD,EAAOgF,GAAaD,GAAQP,GAAgBxE,EAAOgF,GAAaD,GAAQ,KAClFnC,GAAQ5C,EAAOgF,GAAaD,GAAQ,IAI5C,MAAO,CAACvB,EAAKlD,EAAMsC,GA3PCsC,CAAY1B,EAAKlD,EAAMqC,EAAU6B,EAAe5B,IADzB,mBAC1CY,EAD0C,KACrClD,EADqC,KAC/BsC,GAD+B,UAKzC,GAAIhC,IAAYsD,OAAOC,UAAUnE,EAAO0C,GAAKC,GAAU,GAAKC,MAC7DsB,OAAOC,UAAUvB,KAASA,GAAO5C,EAAO0C,GAAKC,GAAU,IAAMpC,GAC9DP,EAAO0C,GAAKC,GAAU,GAAKC,GAAOe,KAAKwB,KAAKvC,KAASjB,EAAgBsC,OAAS,GAAa,IAARvB,EAAW,CAAC,IAAD,EAoJ1G,SAAqBA,EAAKc,EAAKb,EAAU6B,EAAe5B,GACpD,IAAIiC,EAAclB,KAAKwB,KAAKvC,GAAQA,EAChCwC,EAAU,EACVL,EAAS,KACTD,EAAM,EAJgD,aAMtD,IAAIE,EAAgBF,EAAW,EAAJ,EAC3B9E,EAAOgF,GAAalB,SAAQ,SAACC,EAAEC,IACtBe,GAAqB,IAAXA,GAAgB/E,EAAOgF,GAAahB,GAAO,IAAMa,IACxDG,GAAehB,EAAQ,IAAOgB,KAC9BD,EAASf,EACTR,EAAIH,KAAK,EAAqB,IAAlBmB,EAAwB,IAAM,IAAMxE,EAAOgF,GAAaD,GAAQP,GAAgBxE,EAAOgF,GAAaD,GAAQ,KACxHF,GAAe7E,EAAOgF,GAAaD,GAAQ,GAC3CnC,GAAQ5C,EAAOgF,GAAaD,GAAQ,GACpCK,GAAWpF,EAAOgF,GAAaD,GAAQ,OAInDD,KAbJ,KAAOD,EAAc,GAAI,IAezBA,EAAc7E,EAAO0C,GAAKC,GAAU,GAAKyC,EACzCN,EAAM,EACNC,EAAS,KAtBiD,kBAwBlDF,EAAc,GAAKC,EAAM,IACzB9E,EAAO,GAAG8D,SAAQ,SAACC,EAAEC,IACZe,GAAqB,IAAXA,GAAgB/E,EAAO,GAAGgE,GAAO,IAAMa,IAC9CE,EAASf,EACTR,EAAIH,KAAK,CAACrD,EAAO,GAAG+E,GAAQP,GAAgBxE,EAAO,GAAG+E,GAAQ,KAC9DF,GAAe7E,EAAO,GAAG+E,GAAQ,GACjCnC,GAAQ5C,EAAO,GAAG+E,GAAQ,GAC1BA,EAAS,SAIzB,IAAIC,EAAgBF,EAAW,EAAJ,EAC3B9E,EAAOgF,GAAalB,SAAQ,SAACC,EAAEC,IACtBe,GAAqB,IAAXA,GAAgB/E,EAAOgF,GAAahB,GAAO,IAAMa,IACxDG,GAAehB,EAAQ,IAAOgB,KAC9BD,EAASf,EACTR,EAAIH,KAAK,CAACrD,EAAOgF,GAAaD,GAAQP,GAAgBxE,EAAOgF,GAAaD,GAAQ,KAClFF,GAAe7E,EAAOgF,GAAaD,GAAQ,GAC3CnC,GAAQ5C,EAAOgF,GAAaD,GAAQ,GACpCA,EAAS,SAIrBD,KAxBJ,KAAOD,EAAc,GAAI,IA2BzB,MAAO,CAACrB,EAAKZ,GArMUyC,CAAY3C,EAAKc,EAAKb,EAAU6B,EAAe5B,IADgC,mBAC5FY,EAD4F,KACvFZ,GADuF,UAM9FY,EAAIH,KAAK,CAACrD,EAAO0C,GAAKC,GAAU6B,GAAgBxE,EAAO0C,GAAKC,GAAU,KACtEC,IAAQ5C,EAAO0C,GAAKC,GAAU,GAMlC,GAA0B,mBAAtB3C,EAAO0C,GAAK,GAAG,GAAyB,CACxC,IAAI4C,EAAW,IA2F3B,SAAkC5C,EAAKC,EAAU6B,EAAec,GAC5D,IAAIC,EAKAA,EAJCf,EAIexE,EAAO0C,GAAKC,GAAU,GAAI,EAAE,EAH5B3C,EAAO0C,GAAKC,GAAU,GAAI,EAAE,EAKhD,IAAI6C,EAAe,KACfC,EAAY,EACZC,EAAY/B,KAAKC,MAAoB,IAAdD,KAAKE,UAAc,EAVwB,aAYlE,IAAI8B,EAAgBJ,EAAeE,EAC/BG,EAAW,KACXC,OAAa,EAQjB,GAPA7F,EAAO,GAAG8D,SAAQ,SAACC,EAAEC,GACbD,EAAE,IAAM4B,IAAkBC,GAAuB,IAAXA,IACtCA,EAAW5B,EACNwB,IAAeA,EAAexB,OAIvC0B,EAAY/E,EAOZkF,EAFID,EAJCpB,EAIUgB,EAAe,EAHfA,EAAe,MAO7B,CAEDK,EAAgBtB,GAAgBqB,EAASH,EAAU,EADtC,GAIjBH,EAASjC,KAAK,CAACrD,EAAO,GAAG6F,GAAe,GAAI7F,EAAO,GAAG6F,GAAe,KACrEJ,GAAazF,EAAO,GAAG6F,GAAe,IA1B1C,KAAOJ,EAAYF,GAAe,IArG1BO,CAAyBpD,EAAIC,EAAS6B,EAAcc,GACpD9B,EAAIH,KAAKiC,GAcb,GAVIS,OAAOxF,EAAUqC,IAAMqB,OAAS,GAAmB,IAAdN,KAAKE,UA9PjC,IA+PT7D,EAAO,GAAG8D,SAAQ,SAACkC,IACVA,EAAE,GAAKpD,KAASe,KAAKwB,KAAKvC,KAASoD,EAAE,GAAKpD,KAASe,KAAKwB,KAAKvC,IAAQxC,EAAU,IAAM2F,OAAOxF,EAAUqC,IAAMqB,OAAS,IACtHT,EAAIH,KAAK,CAAC2C,EAAE,GAAIA,EAAE,KAClBpD,IAAQoD,EAAE,OAMlBpD,KAASrC,EAAS,CAMlBiD,EAAMyB,GALS,EACF,EACK,GAG2BzB,GAE7ClD,EAAK+C,KAAKG,GACVA,EAAM,GACNZ,GAAO,IAjGRtC,EAAK2D,OAAS5D,GAAY,IAsGjC,OAFAC,EAAK,GAAG2F,QAAQ1F,GAETD,EAIX,SAASiE,GAAgB2B,EAAQtD,EAAKF,EAAIyD,GACtC,IAEIC,EAFAC,EAAUF,EAAU1D,EAAgBJ,EAAYK,GAAK,GACzDC,EAAW,EAEX,IAAI2D,EAAQjE,EAAYK,GAAK,GAQ7B,GAPgB,IAAZwD,EACAE,EAAS,EAEHD,IACNC,EAASzC,KAAKC,MAAMvB,EAAYK,GAAK,GAAGwD,EAAQ,GAAG,KAGnDhC,OAAOC,UAAUvB,IAAUP,EAAYK,GAAK,GAAGuB,OAASiC,EAAQ,IAAOC,EAAQ,CAC/E,IAAII,EAAU5C,KAAKC,MAAoB,IAAdD,KAAKE,UACjB,IAATjB,GAAc2D,EAAQ,GAAK9F,GAAc4B,EAAYK,GAAK,GAAGuB,OAASiC,EAAQ,EAC9EG,EAAShE,EAAYK,GAAK,GAAGwD,EAAQ,GAAG,GAEnCK,EAAU9F,IACf4F,EAAShE,EAAYK,GAAK,GAAGwD,EAAQ,GAAG,IAI7CC,IACCC,EAAsB,IAAZF,EAAiB,EAAI1D,EAAqB0D,EAAQ,GAAG,GAC/DI,EAAQ9D,GAGZ,IAAIgE,EAAY7C,KAAKE,UAAUwC,EAAOD,GAAQA,EAE9C,IAAK,IAAIhD,KAAKkD,EACV,GAAIE,EAAYF,EAAMlD,GAAG,GAErB,OADAT,EAAWuB,OAAOd,GAI1B,OAAOT,EAAWuD,EAqKtB,SAASjB,GAAQwB,EAAUC,EAAQC,EAAanD,EAAKoD,GACjD,IAAIC,EAAK,EAwHb,OAvHIrD,EAAIM,SAAQ,SAACC,EAAGC,GAEZ,GADAyC,GAAY1C,EAAE,GACV+C,MAAMC,QAAQhD,EAAE,IAKhB,OAJAA,EAAIkB,GAAQ,EAAG,EAAG,GAAIlB,GAAG,GACzB8C,EAAK,EACLH,EAAS,OACTC,EAAc,IAgBlB,GAbQxG,EAAc,GAAG6G,KAAKjD,EAAE,MAAQ5D,EAAc,GAAG6G,KAAKjD,EAAE,KACxD2C,GAAU3C,EAAE,GACZ4C,EAAYtD,KAAKU,EAAE,MAGnB2C,EAAS,EACTC,EAAc,KAEdD,EAAStG,GAAWsG,IAAWtG,IAAYuG,EAAYhC,MAAK,SAACC,GAAD,MAAQ,0BAA2BoC,KAAKpC,SACpG8B,EAAS,EACTC,EAAc,IAGjB,OAAQK,KAAKjD,EAAE,IAAK,CACrB,IAAIkD,EAAI,KACJjD,EAAM,GAAKR,EAAIS,OAAO,GAAM,OAAQ+C,KAAKxD,EAAIQ,EAAM,GAAG,KAAOjD,IAE7Df,EAAO8D,SAAQ,SAACkC,GAAD,OAAOA,EAAElC,SAAQ,SAACc,GACzBA,EAAE,KAAOb,EAAE,GAAGP,EAAIQ,EAAM,GAAG,IAAOiD,IAElCzD,EAAIQ,GAAO,GAAKY,EAAE,GAClBpB,EAAIQ,GAAO,GAAKY,EAAE,GAClB6B,GAAYjD,EAAIQ,EAAM,GAAG,GACzBiD,GAAI,SAMRA,GACAzD,EAAI0D,OAAOlD,EAAM,EAAE,QAK1B,CACD,IAAK7D,EAAc,GAAG6G,KAAKjD,EAAE,IACzB,OAEC,GAAI5D,EAAc,GAAG6G,KAAKjD,EAAE,IAC7B,OAEAC,EAAM,GAAKR,EAAIS,OAAO,GAAM9D,EAAc,GAAG6G,KAAKxD,EAAIQ,EAAM,GAAG,MAAQ7D,EAAc,GAAG6G,KAAKxD,EAAIQ,EAAM,GAAG,MAAU,qBAAsBgD,KAAKxD,EAAIQ,GAAO,MAKtI0C,IAAW3C,EAAE,IAAM0C,IAAalG,EAAQ,GAAgB,IAAVyD,GAAiB,YAAagD,KAAKxD,EAAIQ,EAAM,GAAG,MAAO8C,MAAMC,QAAQvD,EAAIQ,EAAM,GAAG,KACxH,IAAVA,GAAkB,OAAQgD,KAAKxD,EAAIQ,EAAM,GAAG,KAAOE,OAAOC,UAAUsC,IAAazF,KAAegD,GAAOR,EAAIS,OAAO,IAAO,qBAAsB+C,KAAKxD,EAAIQ,EAAM,GAAG,IAgB1JA,EAAM,GAAM,YAAagD,KAAKxD,EAAIQ,EAAM,GAAG,MAAQyC,IAAalG,EAAQ,GAAKmG,IAAWtG,GAAWwG,IAAQC,GACnH7C,GAAOR,EAAIS,OAAO,IAAO,qBAAsB+C,KAAKxD,EAAIQ,EAAM,GAAG,MACzD,SAAUgD,KAAKjD,EAAE,IAClBP,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,OAErB,IAAImD,OAAQpD,EAAE,GAAGqD,MAAM,OAAQC,KAAK,KAAML,KAAKxD,EAAIQ,EAAM,GAAG,KACrE,IAAImD,OAAQpD,EAAE,GAAGqD,MAAM,OAAQC,KAAK,KAAML,KAAKxD,EAAIQ,EAAM,GAAG,KAAU,0BAA2BgD,KAAKjD,EAAE,KAAQ,0BAA2BiD,KAAKxD,EAAIQ,EAAM,GAAG,IAGrJ,IAAImD,OAAQpD,EAAE,GAAGqD,MAAM,OAAQC,KAAK,KAAML,KAAKxD,EAAIQ,EAAM,GAAG,KAAS,0BAA2BgD,KAAKjD,EAAE,KAAQ,0BAA2BiD,KAAKxD,EAAIQ,EAAM,GAAG,IAClKR,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,UAGhCR,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,UANhCR,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,UAQxC6C,MA7BK,SAAUG,KAAKjD,EAAE,IAClBP,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,OAE1B,IAAImD,OAAQpD,EAAE,GAAGqD,MAAM,OAAQC,KAAK,KAAML,KAAKxD,EAAIQ,EAAM,GAAG,KAAS,0BAA2BgD,KAAKjD,EAAE,KAAQ,0BAA2BiD,KAAKxD,EAAIQ,EAAM,GAAG,IAClKR,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,UAGhCR,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,UAEpC6C,OA2BF,YAAaG,KAAKjD,EAAE,KAAOC,EAAM,GAAM,YAAagD,KAAKxD,EAAIQ,EAAM,GAAG,KAAO6C,IAC9G7C,IAAUR,EAAIS,OAAO,GAAKyC,IAAWtG,GAAWqG,IAAalG,EAAQ,IAAMJ,EAAc,GAAG6G,KAAKxD,EAAIQ,EAAM,GAAG,KAAO7D,EAAc,GAAG6G,KAAKxD,EAAIQ,EAAM,GAAG,KAAQ,qBAAsBgD,KAAKxD,EAAIQ,EAAM,GAAG,OACpK,SAAUgD,KAAKjD,EAAE,IAClBP,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,QAE1B,IAAImD,OAAQpD,EAAE,GAAGqD,MAAM,OAAQC,KAAK,KAAML,KAAKxD,EAAIQ,EAAM,GAAG,IAClER,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,WAGhCR,EAAIQ,GAAO,GAAKR,EAAIQ,GAAO,GAAK,WAEpC0C,EAAS,EACTC,EAAc,GACdE,EAAK,GAGP,kBAAmBG,KAAKjD,EAAE,MAC5B2C,EAAS,EACTC,EAAc,QAMnCnD,EC1nBP,IAiBI8D,GAASC,GAAKC,GAAWC,GAAMC,GAAUC,GAAWC,GAAWC,GAAUC,GAjBzEC,GAAW,GAEXC,GAAW,CAAC,CACd7G,KAAM,mBACNC,QAAS,kBACTC,OAAQ,kBACRC,UAAW,mBACX2G,OAAQ,oBACP,CACD7G,QAAS,GACTC,OAAQ,GACRC,UAAW,GACX2G,OAAQ,KAUJC,G,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDhF,MAAQ,CAAC7C,KAAM,GAAID,UAAW,EAAGE,QAAS,gBAAiBC,WAAY,GAAIC,WAAY,GAAIC,aAAc,GAAIK,WAAW,EAAMqH,IAAK,GACxIzH,aAAc,GAAIC,SAAS,EAAMC,QAAS,GAAIC,IAAK,EAAG+B,QAAS,GAAIC,OAAQ,GAAKC,OAAQ,GAAIsF,MAAM,EAAMC,UAAU,EAAMlI,QAAS,EAAGmI,YAAa,GACjJtH,WAAY,CAACC,MAAO,EAAGC,KAAM,GAAIC,QAAS,GAAIC,OAAQ,GAAIC,UAAW,GAAIC,aAAc,GACvFM,aAAc,CAACX,OAAQ,GAAKC,KAAM,EAAGC,QAAS,GAAIC,OAAQ,GAAIC,UAAW,EAAGC,aAAc,GAC1FU,eAAgB,CAACf,OAAQ,GAAKC,KAAM,EAAGC,QAAS,GAAIC,OAAQ,IAC5DiB,UAAW,CAACpB,OAAQ,GAAKC,KAAM,EAAGC,QAAS,GAAIC,OAAQ,GAAIC,UAAW,GAAIC,aAAc,GACxFiH,iBAAiB,EAAOV,SAAU,KAAMW,KAAM,MAEhD,EAAKC,OAASC,IAAMC,YACpB,EAAKC,OAASF,IAAMC,YACpB,EAAKE,OAASH,IAAMC,YAGpB,EAAKG,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,QAAU,EAAKA,QAAQH,KAAb,gBACf,EAAKX,KAAO,EAAKA,KAAKW,KAAV,gBACZ,EAAKV,SAAW,EAAKA,SAASU,KAAd,gBAChB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBACvB,EAAKM,KAAO,EAAKA,KAAKN,KAAV,gBACZ,EAAKO,UAAY,EAAKA,UAAUP,KAAf,gBACjB,EAAKQ,cAAgB,EAAKA,cAAcR,KAAnB,gBACrB,EAAKS,kBAAoB,EAAKA,kBAAkBT,KAAvB,gBA3BN,E,uDA8BP,IAAD,OACTU,KAAKC,SAAS,CACZtJ,UAAW,EACXE,QAAS,gBACTC,WAAY,EACZC,WAAY,GACZ2H,IAAK,GACLxH,SAAS,EACTC,QAAS,EACTC,IAAK,EACLV,QAAS,EACTW,WAAW,EACXE,WAAY,CACVC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,EACXC,aAAc,GAEhBkH,KAAM,IAERmB,YAAW,kBAAM1G,GAAW,EAAKC,SAAQ,M,qCAG3B,IAAD,OACbuG,KAAKC,SAAS,CACZtJ,UAAW,EACXE,QAAS,gBACTC,WAAY,GACZC,WAAY,GACZ2H,IAAK,GACLxH,SAAS,EACTC,QAAS,GACTC,IAAK,EACLV,QAAS,EACTW,WAAW,EACXE,WAAY,CACVC,MAAO,EACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,GACXC,aAAc,GAEhBM,aAAc,CACZX,OAAQ,GACRC,KAAM,EACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,EACXC,aAAc,GAEhBsB,QAAS,GACTC,MAAO,GACP2F,KAAM,IAERmB,YAAW,kBAAM1G,GAAW,EAAKC,SAAQ,M,+BAGjC,IAAD,OACPuG,KAAKC,SAAS,CACZtJ,UAAW,GACXE,QAAS,gBACTC,WAAY,GACZC,WAAY,GACZ2H,IAAK,GACLxH,SAAS,EACTC,QAAS,GACTC,IAAK,EACLV,QAAS,EACTW,WAAW,EACXE,WAAY,CACVC,MAAO,EACPC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,GACXC,aAAc,GAEhBM,aAAc,CACZX,OAAQ,GACRC,KAAM,EACNC,QAAS,GACTC,OAAQ,GACRC,UAAW,EACXC,aAAc,GAEhBU,eAAgB,CACdf,OAAQ,GACRC,KAAM,EACNC,QAAS,GACTC,OAAQ,IAEVV,aAAc,GACdD,aAAc,GACdmC,QAAS,GACTC,MAAO,GACPC,OAAQ,IACR0F,KAAM,IAERmB,YAAW,kBAAM1G,GAAW,EAAKC,SAAQ,M,gCAGhC,IAAD,OACR0G,QAAQC,QACRjC,GAAW,EACX,IACIkC,EADAxC,EAAM,GA8BV,OA5BAmC,KAAKC,SAAS,CAACrJ,KAAMiD,OACrBqG,YAAW,WACT,EAAKzG,MAAM7C,KAAKwD,SAAQ,SAACC,GACzBA,EAAED,SAAQ,SAACc,GAQT,GAPK,UAAWoC,KAAKpC,EAAE,IACrBmF,EAAc,EAEN,aAAc/C,KAAKpC,EAAE,MAC7BmF,EAAc,IAGV,qBAAsB/C,KAAKpC,EAAE,KAAOkC,MAAMC,QAAQnC,GACtD,GAAIkC,MAAMC,QAAQnC,EAAE,IAClB,IAAK,IAAIxB,KAAKwB,EACZ2C,EAAIlE,KAAK,CAACuB,EAAExB,GAAG,GAAG4E,GAAS+B,GAAanF,EAAExB,GAAG,GAAGgE,MAAM,UAAUC,KAAK,YAIvEE,EAAIlE,KAAK,CAACuB,EAAE,GAAGA,EAAE,WAOzB,EAAK+E,SAAS,CAACpB,YAAahB,MAEzB,IACKmC,KAAKvG,MAAMsF,MACjB,KAAK,EAAGiB,KAAKC,SAAS,CAACtB,MAAM,EAAMC,UAAU,IAC7C,MACA,KAAK,EAAGoB,KAAKC,SAAS,CAACtB,MAAM,EAAMC,UAAU,IAC7C,MACA,KAAK,EAAGoB,KAAKC,SAAS,CAACtB,MAAM,EAAOC,UAAU,IAC9C,MACA,QAAS,U,6BAKXoB,KAAKC,SAAS,CACZtB,MAAOqB,KAAKvG,MAAMkF,S,iCAKpBqB,KAAKC,SAAS,CACZrB,UAAWoB,KAAKvG,MAAMmF,a,kCAId0B,GAAQ,IAAD,OACjBN,KAAKC,SAAS,CAACnB,iBAAiB,IAChCkB,KAAKC,SAAS,CAAC7B,SAAU,OACzBA,GAAW,EACXH,GAAY,GACZC,IAAY,EACZJ,GAAY,EACZE,GAAY,EACZD,GAAO,EACP,IAAIwC,EAAgB,EAcpB,IAZA1C,GAAMT,MAAMoD,KAAKC,SAASC,iBAAiB,YACvCC,QAEJX,KAAKhB,OAAO4B,QAAQC,OAAS,GAC7Bb,KAAKb,OAAOyB,QAAQC,OAAS,GAE7B1C,GAAW3H,EAAgBwJ,KAAKvG,MAAM5C,UAAYmJ,KAAKvG,MAAMiF,IAAM,IAAM,IAEzEsB,KAAKhB,OAAO4B,QAAQE,OAEpBP,GAAiBpC,GAAW3H,EAAgBwJ,KAAKvG,MAAM5C,SAEzC,UAAVyJ,EAAmB,CAIrB,IAHArC,GAAUtE,KAAKoH,aAAY,WACzB,EAAK/B,OAAO4B,QAAQE,SACnB3C,KACIoC,EAAgBpC,IACrBF,GAAUtE,KAAKuG,YAAW,WACxB,EAAKf,OAAOyB,QAAQE,OACpB7C,GAAUtE,KAAKoH,aAAY,kBAAM,EAAK5B,OAAOyB,QAAQE,SAAQ3C,OAC5DoC,IACHA,GAAiBpC,GAAW3H,EAAgBwJ,KAAKvG,MAAM5C,SAEzDoH,GAAUtE,KAAKuG,WAAWF,KAAKJ,MAAOI,KAAKvG,MAAM9C,UAAY,GAAKwH,GAAW,UAG7E,KAAOoC,EAAgBpC,IACjBF,GAAUtE,KAAKuG,YAAW,WACxB,EAAKf,OAAOyB,QAAQE,SACnBP,IACHA,GAAiBpC,GAAW3H,EAAgBwJ,KAAKvG,MAAM5C,SAIjD,UAAVyJ,EACFrC,GAAUtE,KAAKuG,WAAWF,KAAKF,cAAe3B,GAAW,OAGzDF,GAAUtE,KAAKuG,WAAWF,KAAKL,gBAAiBxB,KAChDC,Q,wCAKe,IAAD,OAkBhB,GAjBEJ,GAAWxH,EAAgBwJ,KAAKvG,MAAM5C,SAAW,KACnDmH,GAAW,GAEPA,KAAaxH,EAAgBwJ,KAAKvG,MAAM5C,WAC1CmH,GAAW,GAGRF,KACCD,GAAI,GAAGmD,UAAUC,OAAO,oBAClB,SAAU3D,KAAKO,GAAIC,IAAWoD,aAClC7C,GAAS,GAAGyC,OACZ/C,MAEFH,GAAUsC,WAAWF,KAAKL,gBAAiB,IAAOK,KAAKvG,MAAMoF,YAAYf,IAAW,IAAMkC,KAAKvG,MAAMiF,IAAM,MAGjHyB,QAAQgB,IAAInD,KACPA,KAAaF,GAAW,CAC3B,IAAIyC,EAAgB,EAChBpC,EAAW3H,EAAgBwJ,KAAKvG,MAAM5C,UAAYmJ,KAAKvG,MAAMiF,IAAM,IAAM,IAK7E,IAHAsB,KAAKhB,OAAO4B,QAAQE,OAEpBP,GAAiBpC,EAAW3H,EAAgBwJ,KAAKvG,MAAM5C,SAChD0J,EAAgBpC,GACrBF,GAAUtE,KAAKuG,YAAW,WACxB,EAAKf,OAAOyB,QAAQE,SACnBP,IACHA,GAAiBpC,EAAW3H,EAAgBwJ,KAAKvG,MAAM5C,SAE3D,IAAKiH,GAGH,OAFAE,IAAYgC,KAAKvG,MAAMoF,YAAYf,IAAW,QAC9CA,KAOEA,GAAYD,GAAItD,OAAO,EACzBqD,GAAUsC,WAAWF,KAAKL,gBAAiB,IAAOK,KAAKvG,MAAMoF,YAAYf,IAAW,IAAMkC,KAAKvG,MAAMiF,IAAM,KAG3GwB,WAAWF,KAAKJ,KAAM,IAAOI,KAAKvG,MAAMoF,YAAYf,IAAW,IAAMkC,KAAKvG,MAAMiF,IAAM,KAGxFb,GAAIC,IAAWkD,UAAUC,OAAO,oBAE1B,SAAU3D,KAAKO,GAAIC,IAAWoD,YAAgBpD,IAAe,QAASR,KAAK0C,KAAKvG,MAAMoF,YAAYf,GAAU,GAAG,KACnHO,GAASN,IAAM+C,OAIjB9C,IAAYgC,KAAKvG,MAAMoF,YAAYf,IAAW,GAC9CA,OACAC,KACaM,GAAS9D,OAAO,IAC3BwD,GAAO,K,kCAKE,EACXiC,KAAKC,SAAS,CAACnB,iBAAiB,IAChC2B,SAASW,iBAAiB,UAAWpB,KAAKD,mBAC1CC,KAAKN,YAAY,W,2CAIbxB,IAAe,SAAUZ,KAAKO,GAAIC,IAAWoD,YAA6B,IAAdpD,IAAqB,QAASR,KAAK0C,KAAKvG,MAAMoF,YAAYf,GAAU,GAAG,MAS7HI,IAAaA,KAAe,SAAUZ,KAAKO,GAAIC,IAAWoD,YAA6B,IAAdpD,IAAoB,QAASR,KAAK0C,KAAKvG,MAAMoF,YAAYf,GAAU,GAAG,QACvJM,KACAF,IAAY,IAVZL,GAAIC,IAAWkD,UAAUC,OAAO,oBAGhC/C,IAAY,K,sCAWC,IAAD,OACdA,IAAY,EACZD,GAAUtE,KAAKuG,YAAW,YACrBhC,IAAgB,SAAUZ,KAAKO,GAAIC,IAAWoD,YAA6B,IAAdpD,IAAqB,QAASR,KAAK,EAAK7D,MAAMoF,YAAYf,GAAU,GAAG,KACvIM,KAEFN,KACAI,IAAY,IACR,IAAO8B,KAAKvG,MAAMoF,YAAYf,IAAW,IAAMkC,KAAKvG,MAAMiF,IAAM,IAAjE,GAAwF,MACvFZ,GAAYD,GAAItD,OAAO,IACzBqD,GAAUsC,WAAWF,KAAKF,cAAe,IAAOE,KAAKvG,MAAMoF,YAAYf,IAAW,IAAMkC,KAAKvG,MAAMiF,IAAM,Q,6BAU3G,IAAK,IAAIhF,KAHTsG,KAAKC,SAAS,CAAC7B,SAAUA,KACzBqC,SAASY,oBAAoB,UAAWrB,KAAKD,mBAC7CC,KAAKC,SAAS,CAACnB,iBAAiB,IAClBb,GACZqD,aAAarD,GAAUvE,IACvB6H,cAActD,GAAUvE,IAG1B,IAAK,IAAIA,KAAKmE,GACRA,GAAInE,GAAGsH,UAAUQ,SAAS,qBAC5B3D,GAAInE,GAAGsH,UAAUC,OAAO,oBAI5BK,aAAa1D,M,0CAIbpE,GAAWwG,KAAKvG,OAEhB,IAAK,IAAIgI,EAAI,EAAGA,EAAI,GAAIA,IAAM,CAC5B,IAAIC,EAAQ1B,KAAKZ,OAAOwB,QACxBc,EAAMb,OAAS,GACfxC,GAAS1E,KAAK+H,GACd,IAAIC,EAAaD,EAAME,WAAU,GACjCD,EAAWd,OAAS,GACpBxC,GAAS1E,KAAKgI,M,+BAIR,IAAD,OACH/K,EAAOoJ,KAAKvG,MAAM7C,KACtB,OACE,6BACE,6BACA,2BAAOiL,IAAK7B,KAAKhB,QACnB,4BAAQ8C,IAAK9C,IAAQ+C,KAAK,gBAExB,2BAAOF,IAAK7B,KAAKb,QACf,4BAAQ2C,IAAK3C,IAAQ4C,KAAK,gBAE5B,2BAAOF,IAAK7B,KAAKZ,QACf,4BAAQ0C,IAAK1C,IAAQ2C,KAAK,iBAG5B,gCACE,0CAAe,8CACb,6BACE,yBAAKb,UAAU,kBACb,4BAAQc,SAA8B,IAApBhC,KAAKvG,MAAMsF,KAAYmC,UAAU,cAAce,QAASjC,KAAKX,UAA/E,YACA,4BAAQ2C,SAA8B,IAApBhC,KAAKvG,MAAMsF,KAAYmC,UAAU,cAAce,QAASjC,KAAKT,cAA/E,gBACA,4BAAQyC,SAA8B,IAApBhC,KAAKvG,MAAMsF,KAAYmC,UAAU,cAAce,QAASjC,KAAKR,QAA/E,WAEF,8BACA,4BAAQyC,QAASjC,KAAKP,QAASuC,SAAUhC,KAAKvG,MAAMqF,iBAApD,WACA,4BAAQmD,QAASjC,KAAKrB,MAAtB,QACA,4BAAQqD,UAAWhC,KAAKvG,MAAMkF,KAAMsD,QAASjC,KAAKpB,UAAlD,OACA,4BAAQqD,QAASjC,KAAKN,YAAasC,SAAUhC,KAAKvG,MAAM7C,KAAK2D,OAAS,GAAKyF,KAAKvG,MAAMqF,iBAAtF,WACA,4BAAQmD,QAASjC,KAAKJ,KAAMoC,UAAWhC,KAAKvG,MAAMqF,iBAAlD,QACA,4BAAQmD,QAASjC,KAAKH,UAAWmC,SAAUhC,KAAKvG,MAAM7C,KAAK2D,OAAS,GAAKyF,KAAKvG,MAAMqF,iBAApF,YACA,yBAAKoD,MAAO,CAACC,QAAkC,OAAxBnC,KAAKvG,MAAM2E,UAAqBA,IAAY,EAAK,IAAM,MAA9E,aAA+F4B,KAAKvG,MAAM2E,WAE1G,yBAAK8C,UAAU,YAAf,6DACA,yBAAKA,UAAU,QAAf,qBAEN,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACdtK,EAAKwL,KAAI,SAAC/H,EAAGC,GACZ,IAAIqE,EAAO,EACP0D,EAAQ,EACZ,OAAO,yBAAKnB,UAAYtK,EAAK2D,OAAO,IAAMD,EAAS,eAA6B,IAAVA,EAAe,gBAAkB,MAAQgI,IAAKjG,OAAO/B,IACzH,yBAAK4G,UAAU,eACd7G,EAAE+H,KAAI,SAAClH,EAAGlC,GAET,GAAIA,EAAI,GAAKqB,EAAEE,OAAO,GAAK6C,MAAMC,QAAQhD,EAAErB,EAAI,GAAG,IAEhD,OADA2F,GAAQzD,EAAE,GACH,yBAAKgH,MAAO,CAACK,SAAU,WAAYC,OAAQ,SAAUF,IAAKjG,OAAO/B,GAAS,IAAMtB,GACrF,0BAAMkI,UAAU,eAAgB,UAAW5D,KAAKpC,EAAE,IAAM,EAAI,IAC/C,IAARlC,GAAaoE,MAAMC,QAAQnC,IAAgB,IAARlC,GAAa2F,IAASzD,EAAE,IAAOV,OAAOC,UAAUkE,EAAKzD,EAAE,KAAQlC,IAAQqB,EAAEE,OAAO,GAAKW,EAAE,KAAO,EAAKzB,MAAM/C,UAAc2L,EAAQ7L,EAAgB,EAAKiD,MAAM5C,SAAY,yBAAKyL,IAAK3D,EAAKzD,EAAE,GAAIgG,UAAU,OAAOgB,MAAO,EAAKzI,MAAMkF,KAAS,aAAcrB,KAAKpC,EAAE,IAAO,CAACiH,QAAS,OAAQM,IAAI,OAAQC,KAAK,OAAY,QAASpF,KAAKpC,EAAE,IAAO,CAACiH,QAAS,OAAQO,KAAM,QAAY,CAACP,QAAS,QAAa,CAACA,QAAS,OAAO,yBAAKD,MAAO,EAAKzI,MAAMmF,SAAW,CAACuD,QAAQ,KAAO,CAACA,QAAQ,MAAOxD,EAAKzD,EAAE,GAAK,GAAQ,0BAAMgH,MAAO,CAACS,QAAS,SAAUN,MAA2B,KAC/kB,yBAAKnB,UAAY,UAAW5D,KAAKpC,EAAE,IAAM,UAAY,cACpDb,EAAErB,EAAI,GAAGoJ,KAAI,SAAC9F,EAAGsG,GAChB,OAAKA,EAGIA,IAASvI,EAAErB,EAAI,GAAGuB,OAAO,EACzB,yBAAK2G,UAAW,SAAW5E,EAAE,GAAI4F,MAAO,CAACW,YAAa,KAAMP,IAAKhG,EAAE,GAAGD,OAAO/B,GAASsI,IAGtF,yBAAK1B,UAAW,SAAW5E,EAAE,GAAIgG,IAAKhG,EAAE,GAAGD,OAAO/B,GAASsI,IAN3D,yBAAK1B,UAAW,SAAW5E,EAAE,GAAI4F,MAAO,CAACY,WAAY,KAAMR,IAAKhG,EAAE,GAAGD,OAAO/B,GAASsI,SAc/F,IAAIxF,MAAMC,QAAQnC,EAAE,IAApB,CAKL,IAMG6H,EANCC,EAAO,KACZ,GAAI5F,MAAMC,QAAQnC,KAAmB,MAAZA,EAAE,GAAG,IAA0B,MAAZA,EAAE,GAAG,IAAa,CAC5D,IAAI+H,EAAO/H,EAAE,GAAGgI,MAAM,IACtBF,EAAOxI,OAAOyI,EAAKE,MAAM,EAAG,IAC5BjI,EAAE,GAAK+H,EAAKtF,KAAK,IAGnB,GAAIP,MAAMC,QAAQnC,GAAI,CACpB,IAAI+H,EAAO/H,EAAE,GAAGgI,MAAM,IACtBD,EAAKrJ,UACLmJ,EAAKE,EAAKE,MAAM,EAAG,GACTxF,KAAK,IAChBgB,GAAQzD,EAAE,GAEV,OAAO,yBAAKgG,UAAW9D,MAAMC,QAAQnC,GAAM,SAAWA,EAAE,GAAGwC,MAAM,cAAcC,KAAK,IAAQ,UAAY,EAAKlE,MAAM5C,QAAUyL,IAAKhI,EAAMtB,EAAMkC,EAAE,IAC9I,kBAAC,GAAD,CAAQ8H,KAAMA,EAAMD,GAAIA,EAAI/J,IAAKA,EAAKpC,KAAM,EAAK6C,MAAM7C,QAC1C,IAARoC,GAAaoE,MAAMC,QAAQnC,IAAgB,IAARlC,GAAa2F,IAASzD,EAAE,IAAOV,OAAOC,UAAUkE,EAAKzD,EAAE,KAAQlC,IAAQqB,EAAEE,OAAO,GAAKW,EAAE,KAAO,EAAKzB,MAAM/C,UAAc2L,EAAQ7L,EAAgB,EAAKiD,MAAM5C,SAAY,yBAAKyL,IAAK3D,EAAKzD,EAAE,GAAIgG,UAAU,OAAOgB,MAAO,EAAKzI,MAAMkF,KAAS,aAAcrB,KAAKpC,EAAE,IAAO,CAACiH,QAAS,OAAQM,IAAI,OAAQC,KAAK,OAAY,QAASpF,KAAKpC,EAAE,IAAO,CAACiH,QAAS,OAAQO,KAAM,QAAY,CAACP,QAAS,QAAa,CAACA,QAAS,OAAO,yBAAKD,MAAO,EAAKzI,MAAMmF,SAAW,CAACuD,QAAQ,KAAO,CAACA,QAAQ,MAAOxD,EAAKzD,EAAE,GAAK,GAAQ,0BAAMgH,MAAO,CAACS,QAAS,SAAUN,MAA2B,sB,GAjd/kBpD,IAAMmE,WAoelBC,G,oLACgBC,GACpB,OAAItD,KAAKvB,MAAM7H,OAAS0M,EAAU1M,O,+BAQlC,IAAI2M,EAAK,KAKT,MAJsB,QAAlBvD,KAAKvB,MAAMsE,IAAoC,IAApB/C,KAAKvB,MAAMuE,OACxCO,EAAK,CAACb,KAAM,OAAQc,MAAO,OAAOf,IAAK,QAAQD,OAAQ,SAGlD,6BAA2B,OAApBxC,KAAKvB,MAAMuE,KAAkB,yBAAKd,MAAOqB,EAAIjB,IAAKtC,KAAKvB,MAAMsE,GAAG/C,KAAKvB,MAAMzF,IAAKkI,UAA8B,IAAlBlB,KAAKvB,MAAMuE,KAAY,YAAc,eAAwB,U,GAfpJ/D,IAAMmE,WAmBZ5E,MCvgBKiF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlG,MACvB,2DCZNmG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFtD,SAASuD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrE,QAAQqE,MAAMA,EAAMC,c","file":"static/js/main.b6a6851f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metro_1.14d657e7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/metro_other.29b77406.mp3\";","module.exports = __webpack_public_path__ + \"static/media/clap01.3019756d.mp3\";","let valuesSimple = [[\"whole\", \"whole--rest\", 4],[\"half\", \"half--rest\", 2],[\"quarter\", \"quarter--rest\", 1],\r\n[\"eighth\", \"eighth--rest\", 0.5],[\"sixteenth\", \"sixteenth--rest\", 0.25],[\"thirty-second\", \"thirty-second--rest\", 0.125]];\r\nlet valuesDots = [[\"whole--dot\", \"whole--dot--rest\", 6],[\"half--dot\",\"half--dot--rest\",3],[\"quarter--dot\",\"quarter--dot--rest\",1.5],\r\n[\"eighth--dot\",\"eighth--dot--rest\",0.75],[\"sixteenth--dot\",\"sixteenth--dot--rest\",0.375],[\"thirty-second--dot\",\"thirty-second--dot--rest\",0.1875]];\r\nlet valuesGroupings = [[\"whole--triplet\",\"whole--quinteplet\", 4],[\"half--triplet\",\"half--quinteplet\", 2],[\"quarter--triplet\",\"quarter--quinteplet\",1],\r\n[\"eighth--triplet\",\"eighth--quinteplet\",0.5]];\r\n\r\nlet values = [valuesSimple].concat([valuesDots]);\r\nvalues = values.concat([valuesGroupings]); // THE WHOLE ARRAY OF NOTE VALUES\r\n\r\nexport let measureReassign = {     // GIVING MEASURE IN NUMBER EQUIVALENT\r\n    \"two_quarters\": 2,\r\n    \"three_quarters\": 3,\r\n    \"four_quarters\": 4,\r\n    \"five_quarters\": 5,\r\n    \"seven_quarters\": 7,\r\n    \"five_eights\": 2.5,\r\n    \"six_eights\": 3\r\n}\r\n\r\nlet names4Beaming = [/eighth|sixteenth|thirty-second/,/rest/]; // REGEX TO MAKE BEAMING\r\nlet beamNum = 1; // THE QUANTITY OF QUARTERS TO BEAM\r\n\r\n\r\nlet barsQuant = 4;  // CHOOSEN QUANTITY OF BARS\r\nlet bars = [];      // CHOOSEN NOTE VALUES\r\nlet measure = 4;    // MEASURE IN QUARTER EQUIVALENT\r\nlet pauseValue = 10; // POSSIBILITY OF PAUSE\r\nlet easyOBProb = 20; // PROBABILITY OF LONGER NOTE VALUE ON BEAT\r\nlet tripletValue = 90; // POSSIBILITY OF TRIPLET; 100 - tripletValue = POSSIBILITY OF QUINTEPLET\r\nlet easyGrouping = 100; // DIFFICULTY OF GROUPINGS IN TUPLETS\r\nlet linkIns = true; // ALLOWING GROPINGS WITH LINKS INSIDE THE BAR\r\nlet linkOut = 0; // PROBABILITY GROUPINGS WITH LINKS OUTSIDE THE BAR\r\nlet lvl = 0;        // LEVEL OF DIFFICULTY\r\nlet groupRest = true; // GROUPING REST\r\nlet showBeat = false; // NOT ALLOWING TO START THE GROUP BEFORE STRONG BEAT\r\nlet fixingBeatProb = 70; // PROBABILITY TO MOVE RHYTM TO STRONG OR WEAK BEAT \r\n\r\n// PROBABILITY OF SIMPLE VALUES****\r\nlet noteValues = {  // PROBABILITY \r\n    whole: 5,   //5\r\n    half: 11,   //11\r\n    quarter: 44,//44\r\n    eighth: 56, //56\r\n    sixteenth: 64, //64\r\n    thirtySecond: 0 //66\r\n}\r\nlet noteValuesNames = Object.keys(noteValues); \r\n\r\nlet noteProbability = []; // ARRAY WITH \"noteValuesNames\" + PERCENTAGE OF PROBABILITY\r\nlet maxNoteValue = null;  // MAXIMUM PERCENTAGE VALUE OF PROBABILITY OF \"noteValue\";\r\n\r\n// PROBABILITY OF SIMPLE VALUES****\r\n\r\n// PROBABILITY OF DOTTED VALUES****\r\nlet dottedValues = {\r\n    whole: -0.1,//0\r\n    half: -0.1,//0\r\n    quarter: 10,//10 \r\n    eighth: 30, //30    enable noteValues sixteenth\r\n    sixteenth: 0, //35  enable noteValues thirtySecond\r\n    thirtySecond: 0 //66\r\n}\r\nlet dottedValuesNames = Object.keys(dottedValues);\r\n\r\nlet dottedProbability = [];\r\nlet maxDottedValue = null;\r\n\r\n// PROBABILITY OF DOTTED VALUES****\r\n\r\n// PROBABILITY OF GROUPING VALUES****\r\nlet groupingValues = {\r\n    whole: -0.1,    //0\r\n    half: 3,        //3\r\n    quarter: 10,    //10  simValIns triplet=eights, quinteplet=sixteenth\r\n    eighth: 12     //12 \r\n}\r\nlet groupingValuesNames = Object.keys(groupingValues);\r\n\r\nlet groupingProbability = [];\r\nlet maxGroupingValue = null;\r\n\r\n// PROBABILITY OF GROUPING VALUES****\r\n\r\n// THE ARRAY OF PROBABILITIES\r\nlet probability = null; \r\n\r\n// PROBABILITY OF VALUES INSIDE THE TUPLET\r\nlet simValIns = {\r\n    whole: -0.1,\r\n    half: 5,\r\n    quarter: 15,\r\n    eighth: 20,\r\n    sixteenth: 25,\r\n    thirtySecond: 30\r\n}\r\n\r\nlet simValInsNames = Object.keys(simValIns);\r\n\r\nlet simValInsProbability = [];\r\nlet maxSimValsIns = null;\r\n\r\n// PROBABILITY OF VALUES INSIDE THE TUPLET\r\n\r\n\r\n\r\nlet ind = 0;        // INDEX OF ARRAY: SIMPLE, DOTS, GROUPINGS\r\nlet indInner = 0;   // INDEX INSIDE THE ARRAY\r\nlet fill = 0;       // FILLING OF THE BAR\r\n\r\n// DETERMINING THE PROBABILITY OF DIFFERENT NOTES VALUES\r\nlet simpleK = 75; // 75 \r\nlet dotsK = 95;   // 20 95\r\nlet groupK = 100;  // 5 100\r\nlet lvlK = null;  // MAXIMUM VALUE TO DETERMINE \"ind\"\r\nlet arrayOfProbability = [simpleK,dotsK,groupK];\r\n\r\n\r\n\r\n\r\nexport function updateData(state) {\r\n    beamNum = state.beamNum;\r\n    barsQuant = state.barsQuant;\r\n    measure = measureReassign[state.measure];\r\n    pauseValue = state.pauseValue;\r\n    easyOBProb = state.easyOBProb;\r\n    tripletValue = state.tripletValue;\r\n    easyGrouping = state.easyGrouping;\r\n    linkIns = state.linkIns;\r\n    linkOut = state.linkOut;\r\n    lvl = state.lvl;\r\n    simpleK = state.simpleK;\r\n    dotsK = state.dotsK;\r\n    groupK = state.groupK;\r\n    groupRest = state.groupRest;\r\n    showBeat = state.showBeat;\r\n    //////////////////\r\n    noteValues = state.noteValues;\r\n    noteProbability = [];\r\n    maxNoteValue = null;\r\n\r\n    for (let n in noteValuesNames) {\r\n        if (noteValues[noteValuesNames[n]] !== 0) {\r\n            noteProbability.push([noteValuesNames[n]]);\r\n            noteProbability[n].push(noteValues[noteValuesNames[n]]);\r\n        }\r\n    }\r\n    maxNoteValue = noteProbability.reverse()[0][1];\r\n    noteProbability.reverse();\r\n    //\r\n    dottedValues = state.dottedValues;\r\n    dottedProbability = [];\r\n    maxDottedValue = null;\r\n\r\n    for (let n in dottedValuesNames) {\r\n        if (dottedValues[dottedValuesNames[n]] !== 0) {\r\n            dottedProbability.push([dottedValuesNames[n]]);\r\n            dottedProbability[n].push(dottedValues[dottedValuesNames[n]]);\r\n        }\r\n    }\r\n    maxDottedValue = dottedProbability.reverse()[0][1];\r\n    dottedProbability.reverse();\r\n    //\r\n    groupingValues = state.groupingValues;\r\n    groupingProbability = [];\r\n    maxGroupingValue = null;\r\n\r\n    for (let n in groupingValuesNames) {    \r\n        if (groupingValues[groupingValuesNames[n]] !== 0) {\r\n            groupingProbability.push([groupingValuesNames[n]]);\r\n            groupingProbability[n].push(groupingValues[groupingValuesNames[n]]);\r\n        }\r\n    }\r\n    maxGroupingValue = groupingProbability.reverse()[0][1];\r\n    groupingProbability.reverse();\r\n    //\r\n    simValIns = state.simValIns;\r\n    simValInsProbability = [];\r\n    maxSimValsIns = null;\r\n\r\n    for (let n in simValInsNames) {\r\n        if (simValIns[simValInsNames[n]] !== 0) {\r\n           simValInsProbability.push([simValInsNames[n]]);\r\n            simValInsProbability[n].push(simValIns[simValInsNames[n]]); \r\n        } \r\n    }\r\n    maxSimValsIns = simValInsProbability.reverse()[0][1];\r\n    simValInsProbability.reverse();\r\n    //////////////////\r\n    probability = [[noteProbability,maxNoteValue],[dottedProbability,maxDottedValue],\r\n    [groupingProbability,maxGroupingValue]];\r\n    arrayOfProbability = [simpleK,dotsK,groupK];\r\n    //\r\n    //  CHANGING THE LEVEL OF DIFFUCULTY\r\n    if (lvl === 0) {\r\n        lvlK = simpleK-1;\r\n        // linkOut = 0;\r\n    }\r\n    else if (lvl === 1) {\r\n        lvlK = dotsK-1;\r\n        // linkOut = 50;\r\n    } \r\n    else {\r\n        lvlK = 100;\r\n        // linkOut = 100;\r\n    }\r\n}\r\n\r\n// generatingValues();\r\n\r\n export function generatingValues() {\r\n    let bar = [];\r\n    bars = [];\r\n    while (bars.length < barsQuant) {\r\n        let remained = measure - fill;\r\n        let valuesInd = Math.round(Math.random()*(lvlK));\r\n        ind = null;\r\n        arrayOfProbability.forEach((x,index) => {\r\n            if ((valuesInd < x) && (!ind) && (ind!==0) && (remained >= values[index][probability[index][0].length-1][2])) {\r\n                ind = index;\r\n            }\r\n            else if (!ind && ind!==0 && index===probability.length-1) {\r\n                ind = 0;\r\n            }\r\n        })\r\n\r\n        // TUPLET NOT TO FALL ON WEAK BEAT\r\n        if (!Number.isInteger(fill) && (ind === 2) && (dotsK > simpleK) && (remained >= values[1][probability[1][0].length-1][2]) ) {\r\n            ind = 1\r\n        }\r\n        else if (!Number.isInteger(fill) && (ind === 2) && (dotsK < simpleK) ) {\r\n            ind = 0;\r\n        }\r\n            \r\n\r\n        let min = null;\r\n        let safeMin = null;\r\n\r\n        values[ind].forEach((x,index) => {\r\n            if (x[2] <= remained && !min && min!==0) {\r\n                min = index;\r\n                safeMin = index;\r\n                }\r\n            });\r\n\r\n        let linkOutPr = (measure - fill <= 1 && bars.length+1 < barsQuant && linkOut && ind !== 2) ? Math.round(Math.random()*100) : null;\r\n        if (linkOutPr < linkOut && linkOutPr) {\r\n            min = 1;\r\n        } \r\n    \r\n        // GENERATING NEW NOTE VALUE\r\n        generatingIndex(min,fill,ind)\r\n        \r\n        let indInnerInner = insideValue();\r\n\r\n        let checkOut = values[ind][indInner][2] - remained;\r\n        if (measure - fill <= 1 && !values[0].some((x) => x[2] === checkOut) && !values[1].some((y) => y[2] === checkOut) && \r\n        ind !== 2 && checkOut > 0) {\r\n            indInner = safeMin;\r\n        }\r\n       \r\n\r\n        // LINKS OUTSIDE THE BAR\r\n        if (fill + values[ind][indInner][2] > measure) {\r\n            [bar, bars, fill] = groupingOut(bar, bars, indInner, indInnerInner, fill);\r\n        }\r\n\r\n         // GROUPING WITH LINKS INSIDE THE BAR\r\n         else if (linkIns && !Number.isInteger(values[ind][indInner][2] + fill) \r\n         && !Number.isInteger(fill) && fill + values[ind][indInner][2] <= measure \r\n         && values[ind][indInner][2] + fill > Math.ceil(fill) && noteProbability.length < 6 && ind !== 2) {\r\n             [bar, fill] = groupingIns(ind, bar, indInner, indInnerInner, fill);\r\n         }\r\n\r\n        // NO LINKS\r\n        else {\r\n            bar.push([values[ind][indInner][indInnerInner], values[ind][indInner][2]]);\r\n            fill += values[ind][indInner][2];\r\n        }\r\n\r\n        \r\n        \r\n        // GENERATING NOTE VALUES FOR GROUPINGS\r\n        if (values[ind][0][0] === \"whole--triplet\") {\r\n            let barGroup = [];\r\n            generatingGroupingValues(ind,indInner,indInnerInner,barGroup);\r\n            bar.push(barGroup);\r\n        }\r\n\r\n        // FIXING THE BEAT\r\n        if (String(measure - fill).length > 3 && Math.random()*100 <= fixingBeatProb) {\r\n            values[0].forEach((z) => {\r\n                if ((z[2] + fill === Math.ceil(fill) || z[2] + fill === Math.ceil(fill) - beamNum / 2) && String(measure - fill).length > 3) {\r\n                    bar.push([z[0], z[2]]);\r\n                    fill += z[2];\r\n                }\r\n            })\r\n        }\r\n\r\n        // CLOSING THE BAR\r\n        if (fill === measure) {\r\n            let beamFill = 0;\r\n            let beamGr = 0;\r\n            let beamGrNames = [];  \r\n\r\n             // BEAMING EIGHTH, SIXTEENTH AND THIRTY-SECOND\r\n            bar = beaming(beamFill, beamGr, beamGrNames, bar);\r\n            // console.log(\"end\")\r\n            bars.push(bar);\r\n            bar = [];\r\n            fill = 0;\r\n        }\r\n    }\r\n    bars[0].unshift(measure);\r\n    // console.log(bars);\r\n    return bars;\r\n}\r\n\r\n\r\nfunction generatingIndex(minimum,fill,ind,tuplet) {\r\n    let maxVal = (tuplet) ? maxSimValsIns : probability[ind][1];\r\n    indInner = 0;\r\n    let minVal;\r\n    let check = probability[ind][0];\r\n    if (minimum === 0) {\r\n        minVal = 0;\r\n        }\r\n    else if (!tuplet) {\r\n        minVal = Math.round(probability[ind][0][minimum-1][1]);   \r\n    }\r\n\r\n    if (Number.isInteger(fill) && (probability[ind][0].length > minimum+2) && !tuplet) {\r\n        let easyOnB = Math.round(Math.random()*100);\r\n        if (fill === 0 && easyOnB-30 < easyOBProb && probability[ind][0].length > minimum+3) {\r\n            maxVal = probability[ind][0][minimum+3][1];\r\n            }\r\n        else if (easyOnB < easyOBProb) {\r\n            maxVal = probability[ind][0][minimum+2][1];\r\n            }\r\n    }\r\n    \r\n    if(tuplet) {\r\n        minVal = (minimum === 0) ? 0 : simValInsProbability[minimum-1][1];\r\n        check = simValInsProbability;\r\n    }\r\n\r\n    let randomInd = Math.random()*(maxVal-minVal)+minVal;\r\n\r\n    for (let n in check) {\r\n        if (randomInd < check[n][1]) {\r\n            indInner = Number(n);\r\n            return indInner\r\n        }\r\n    }\r\n    return indInner = minimum;\r\n}\r\n\r\n// GENERATING NOTE OR REST, TRIPLET OR QUINTEPLET\r\nfunction insideValue() {\r\n    if (values[ind][0][0] === \"whole--triplet\") {\r\n        let coef = Math.round(Math.random()*100);\r\n        if (coef <= tripletValue ) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n    let coef = Math.round(Math.random()*100);\r\n    if (coef < pauseValue) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n    \r\n}\r\n\r\n// GROUPING OF TUPLETS\r\nfunction generatingGroupingValues(ind, indInner, indInnerInner, barGroup) {\r\n    let measureGroup; // MEASURE OF TUPLET IN QUARTER EQUIVALENT\r\n    if (!indInnerInner) {\r\n        measureGroup = (values[ind][indInner][2])/2*3;\r\n    }\r\n    else {\r\n        measureGroup = (values[ind][indInner][2])/4*5;\r\n    }\r\n    let minGroupEasy = null\r\n    let fillGroup = 0;\r\n    let coefGroup = Math.round(Math.random()*100)-1;\r\n    while (fillGroup < measureGroup) {\r\n        let remainedGroup = measureGroup - fillGroup;\r\n        let minGroup = null;\r\n        let indInnerGroup;\r\n        values[0].forEach((x,index) => {\r\n            if (x[2] <= remainedGroup && !minGroup && minGroup!==0) {\r\n                minGroup = index;\r\n                if (!minGroupEasy) {minGroupEasy = index}\r\n            }\r\n        });\r\n\r\n        if (coefGroup < easyGrouping) {\r\n            if (!indInnerInner) {\r\n                minGroup = minGroupEasy + 1;\r\n            }\r\n            else {\r\n                minGroup = minGroupEasy + 2;\r\n            }\r\n            indInnerGroup = minGroup;\r\n        }\r\n        else {\r\n            let tuplet = 1; // INVOKING SPECIAL ARRAY FOR THE INSIDE OF TUPLETS\r\n            indInnerGroup = generatingIndex(minGroup,fillGroup,0,tuplet);\r\n        }\r\n\r\n        barGroup.push([values[0][indInnerGroup][0], values[0][indInnerGroup][2]]);\r\n        fillGroup += values[0][indInnerGroup][2];\r\n    } \r\n    return barGroup;\r\n}\r\n\r\n// GROUPING WITH LINKS INSIDE THE BAR\r\nfunction groupingIns(ind, bar, indInner, indInnerInner, fill) {\r\n    let remainedIns = Math.ceil(fill) - fill;\r\n    let fillIns = 0;\r\n    let indIns = null\r\n    let run = 0;\r\n    while (remainedIns > 0) {\r\n        let indForCheck = (!run) ? 1 : 0;\r\n        values[indForCheck].forEach((x,index) => {\r\n            if (!indIns && indIns !== 0 && values[indForCheck][index][2] <= remainedIns) {\r\n                if((indForCheck && index < 4) || !indForCheck) {\r\n                    indIns = index;\r\n                    bar.push([((indInnerInner === 0) ?  \"0\" : '') + values[indForCheck][indIns][indInnerInner], values[indForCheck][indIns][2]]);\r\n                    remainedIns -= values[indForCheck][indIns][2];\r\n                    fill += values[indForCheck][indIns][2];\r\n                    fillIns += values[indForCheck][indIns][2];\r\n                }\r\n            }\r\n        });\r\n        run ++;\r\n    }\r\n    remainedIns = values[ind][indInner][2] - fillIns;\r\n    run = 0;\r\n    indIns = null;\r\n    while (remainedIns > 0) {\r\n        if (remainedIns > 1 || run > 1) {\r\n            values[0].forEach((x,index) => {\r\n                if (!indIns && indIns !== 0 && values[0][index][2] <= remainedIns) {\r\n                        indIns = index;\r\n                        bar.push([values[0][indIns][indInnerInner], values[0][indIns][2]]);\r\n                        remainedIns -= values[0][indIns][2];\r\n                        fill += values[0][indIns][2];\r\n                        indIns = null;\r\n                }\r\n            });\r\n        }\r\n        let indForCheck = (!run) ? 1 : 0;\r\n        values[indForCheck].forEach((x,index) => {\r\n            if (!indIns && indIns !== 0 && values[indForCheck][index][2] <= remainedIns) {\r\n                if((indForCheck && index < 4) || !indForCheck) {\r\n                    indIns = index;\r\n                    bar.push([values[indForCheck][indIns][indInnerInner], values[indForCheck][indIns][2]]);\r\n                    remainedIns -= values[indForCheck][indIns][2];\r\n                    fill += values[indForCheck][indIns][2];\r\n                    indIns = null;\r\n                }\r\n            }\r\n        });\r\n        run ++;\r\n    }\r\n\r\n    return [bar, fill];\r\n}\r\n\r\n// LINKS OUTSIDE THE BAR \r\nfunction groupingOut (bar, bars, indInner, indInnerInner, fill) {\r\n    let remainedIns = measure - fill;\r\n    let run = 0;\r\n            let indIns = null;\r\n            while (measure - fill) {\r\n                let indForCheck = (!run) ? 1 : 0;\r\n                values[indForCheck].forEach((x,index) => {\r\n                if (x[2] === remainedIns && !indIns && indIns!==0) {\r\n                    indIns = index;\r\n                    }\r\n                });\r\n                run++\r\n                if (indIns) {\r\n                    bar.push([((indInnerInner === 0) ?  \"1\" : '') + values[indForCheck][indIns][indInnerInner], values[indForCheck][indIns][2]]);\r\n\r\n                    let beamFill = 0;\r\n                    let beamGr = 0;\r\n                    let beamGrNames = []; \r\n                    bar = beaming(beamFill, beamGr, beamGrNames, bar);\r\n                    \r\n                    bars.push(bar);\r\n                    fill += values[indForCheck][indIns][2];\r\n                }\r\n            }\r\n            \r\n            bar = [];\r\n            fill = 0;\r\n            run = 0;\r\n            while (fill !== values[ind][indInner][2] - remainedIns) {\r\n                indIns = null;\r\n                let indForCheck = (!run) ? 1 : 0;\r\n                values[indForCheck].forEach((x,index) => {\r\n                    if (x[2] === values[ind][indInner][2] - remainedIns && !indIns && indIns!==0) {\r\n                        indIns = index;\r\n                        }\r\n                    });\r\n                run ++;\r\n                if (indIns) {\r\n                    bar.push([values[indForCheck][indIns][indInnerInner], values[indForCheck][indIns][2]]);\r\n                    fill += values[indForCheck][indIns][2];\r\n            }\r\n                \r\n            }\r\n            return [bar, bars, fill];\r\n}\r\n\r\n// BEAMING EIGHTH, SIXTEENTH AND THIRTY-SECOND\r\nfunction beaming(beamFill, beamGr, beamGrNames, bar, tup) {\r\n    let gr = 0;\r\n    bar.forEach((x, index) => {           \r\n        beamFill += x[1];\r\n        if (Array.isArray(x[0])) {\r\n            x = beaming(0, 0, [], x, true);\r\n            gr = 0;\r\n            beamGr = 0;\r\n            beamGrNames = [];\r\n            return;\r\n        }\r\n            if (names4Beaming[0].test(x[0]) && !names4Beaming[1].test(x[0])) { // DIVIDING EIGHTH+SIXTEENTH,THIRTY-SECOND BY BEAT\r\n                beamGr += x[1];\r\n                beamGrNames.push(x[0]);\r\n            }\r\n            else {\r\n                beamGr = 0;\r\n                beamGrNames = [];\r\n            }\r\n            if (beamGr > beamNum || beamGr === beamNum && !beamGrNames.some((y) => (/sixteenth|thirty-second/).test(y))) {\r\n                beamGr = 0;\r\n                beamGrNames = [];\r\n            }\r\n\r\n        if ((/rest/).test(x[0])) {      // GROUPING RESTS\r\n            let a = null;\r\n            if (index+1 <= bar.length-1 && (/rest/).test(bar[index+1][0]) && groupRest) {\r\n                \r\n                values.forEach((z) => z.forEach((y) => {\r\n                    if (y[2] === x[1]+bar[index+1][1] && !a) {\r\n                        // console.log(x[0])\r\n                        bar[index][0] = y[1];\r\n                        bar[index][1] = y[2];\r\n                        beamFill += bar[index+1][1];\r\n                        a = true;\r\n                        // console.log(x[0]);\r\n                        // console.log(\"end\");\r\n                    }\r\n                }))\r\n\r\n                if (a) {\r\n                    bar.splice(index+1,1);\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n            if (!names4Beaming[0].test(x[0])) {\r\n                return;\r\n            }\r\n            else if (names4Beaming[1].test(x[0])) {\r\n                return;\r\n            }\r\n            if (index+1 <= bar.length-1 && (names4Beaming[0].test(bar[index+1][0]) && !names4Beaming[1].test(bar[index+1][0])) && !(/triplet|quinteplet/).test(bar[index][0])) {\r\n\r\n\r\n\r\n                                // START OF THE GROUP\r\n                                if (beamGr === x[1] && beamFill !== measure/2 && (index === 0 || !(/--st|--gr/).test(bar[index-1][0]) || Array.isArray(bar[index-1][0])) &&\r\n                                 (index === 0 || !((/rest/).test(bar[index-1][0]) && Number.isInteger(beamFill) && showBeat)) && (index<=bar.length-1 && !(/triplet|quinteplet/).test(bar[index+1][0])) ) {\r\n\r\n                                    if ((/eighth/).test(x[0])) {                           \r\n                                        bar[index][0] = bar[index][0] + \"--st\";\r\n                                    }\r\n                                    else if ((new RegExp((x[0].match(/\\D/g)).join(\"\"))).test(bar[index+1][0]) || ((/sixteenth|thirty-second/).test(x[0]) && (/sixteenth|thirty-second/).test(bar[index+1][0])) ) {\r\n                                        bar[index][0] = bar[index][0] + \"--1--st\";\r\n                                    }\r\n                                    else {\r\n                                        bar[index][0] = bar[index][0] + \"--0--st\";\r\n                                    }\r\n                                    gr++;\r\n                                    \r\n                                }\r\n\r\n                                // MIDDLE SECTION\r\n                                else if (index>0 && (/--st|--gr/).test(bar[index-1][0]) && (beamFill !== measure/2 && beamGr !== beamNum || tup) && gr &&\r\n                                (index<=bar.length-1 && !(/triplet|quinteplet/).test(bar[index+1][0])) ) {                                 \r\n                                    if ((/eighth/).test(x[0])) {                           \r\n                                        bar[index][0] = bar[index][0] + \"--gr\";\r\n                                        }\r\n                                        else if (!(new RegExp((x[0].match(/\\D/g)).join(\"\"))).test(bar[index+1][0]) && \r\n                                        !(new RegExp((x[0].match(/\\D/g)).join(\"\"))).test(bar[index-1][0]) && !((/sixteenth|thirty-second/).test(x[0]) && (/sixteenth|thirty-second/).test(bar[index+1][0]))) {\r\n                                            bar[index][0] = bar[index][0] + \"--2--gr\";\r\n                                        }\r\n                                        else if ((new RegExp((x[0].match(/\\D/g)).join(\"\"))).test(bar[index+1][0]) || ((/sixteenth|thirty-second/).test(x[0]) && (/sixteenth|thirty-second/).test(bar[index+1][0]))) {\r\n                                            bar[index][0] = bar[index][0] + \"--1--gr\";\r\n                                        }\r\n                                        else {\r\n                                            bar[index][0] = bar[index][0] + \"--0--gr\";\r\n                                        } \r\n                                    gr ++;\r\n                                }   \r\n                                \r\n                                \r\n                            }\r\n\r\n                            // ENDING SECTION\r\n                            if (!(/--st|--gr/).test(x[0]) && index>0 && (/--st|--gr/).test(bar[index-1][0]) && gr &&\r\n(index === bar.length-1 || beamGr === beamNum || beamFill === measure/2 || !names4Beaming[0].test(bar[index+1][0]) || names4Beaming[1].test(bar[index+1][0]) || (/triplet|quinteplet/).test(bar[index+1][0])) ) {\r\n                                if ((/eighth/).test(x[0])) {                            \r\n                                    bar[index][0] = bar[index][0] + \"--end\";\r\n                                }\r\n                                else if ((new RegExp((x[0].match(/\\D/g)).join(\"\"))).test(bar[index-1][0])) {\r\n                                    bar[index][0] = bar[index][0] + \"--1--end\";\r\n                                }\r\n                                else {\r\n                                    bar[index][0] = bar[index][0] + \"--0--end\";\r\n                                }\r\n                                beamGr = 0;\r\n                                beamGrNames = [];\r\n                                gr = 0;\r\n                                \r\n                            }\r\n                        if (!(/--st|--gr|--end/).test(x[0])) {\r\n                            beamGr = 0;\r\n                            beamGrNames = [];\r\n                        }\r\n\r\n        }\r\n        \r\n    })\r\nreturn bar;\r\n}","import React from 'react';\nimport tick01 from \"../src/Sounds/metro_1.mp3\";\nimport tick02 from \"../src/Sounds/metro_other.mp3\";\nimport note01 from \"../src/Sounds/clap01.mp3\";\nimport {updateData, generatingValues, measureReassign} from './notes';\n\nlet soundArr = [];\n\nlet valInTup = [{\n  half: 1.3333333333333333,\n  quarter: 0.6666666666666666,\n  eighth: 0.3333333333333333,\n  sixteenth: 0.16666666666666666,\n  thirty: 0.08333333333333333\n}, {\n  quarter: 0.8,\n  eighth: 0.4,\n  sixteenth: 0.2,\n  thirty: 0.1\n}];\n\n\n\nlet reading, arr, beatReadN, rand, beatFill, metronome, inputOpen, wholeBar, mistakes;\nlet inputPerc = 30; // PERCANTAGE OF WINDOW TO HIT (% FROM ONE SIDE)\nlet soundInd = 0;\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {bars: [], barsQuant: 8, measure: \"four_quarters\", pauseValue: 10, easyOBProb: 20, tripletValue: 90, groupRest: true, bpm: 70,\n    easyGrouping: 95, linkIns: true, linkOut: 50, lvl: 2, simpleK: 50, dotsK: -0.1, groupK: 60, beat: true, beatNumb: true, beamNum: 1, receivedVal: [],  \n    noteValues: {whole: 5, half: 11, quarter: 15, eighth: 35, sixteenth: 36, thirtySecond: 0},\n    dottedValues: {whole: -0.1, half: 5, quarter: 10, eighth: 30, sixteenth: 0, thirtySecond: 0},\n    groupingValues: {whole: -0.1, half: 3, quarter: 10, eighth: 12}, \n    simValIns: {whole: -0.1, half: 5, quarter: 15, eighth: 20, sixteenth: 25, thirtySecond: 0},\n    metronomeSwitch: false, mistakes: null, mode: null};\n\n  this.tick01 = React.createRef();\n  this.tick02 = React.createRef();\n  this.note01 = React.createRef();\n\n\n  this.beginner = this.beginner.bind(this);\n  this.intermediate = this.intermediate.bind(this);\n  this.expert = this.expert.bind(this);\n  this.nextGen = this.nextGen.bind(this);\n  this.beat = this.beat.bind(this);\n  this.beatNumb = this.beatNumb.bind(this);\n  this.beatReading = this.beatReading.bind(this);\n  this.beatReadingFunc = this.beatReadingFunc.bind(this);\n  this.stop = this.stop.bind(this);\n  this.beatInput = this.beatInput.bind(this);\n  this.beatInputFunc = this.beatInputFunc.bind(this);\n  this.beatInputListener = this.beatInputListener.bind(this);\n  }\n\n  beginner() {\n    this.setState({\n      barsQuant: 4,\n      measure: \"four_quarters\",\n      pauseValue: 5,\n      easyOBProb: 50,\n      bpm: 50,\n      linkIns: true,\n      linkOut: 0,\n      lvl: 0,\n      beamNum: 1,\n      groupRest: false,\n      noteValues: {\n        whole: 10,\n        half: 15,\n        quarter: 44,\n        eighth: 56,\n        sixteenth: 0,\n        thirtySecond: 0\n      },\n      mode: 1\n    });\n    setTimeout(() => updateData(this.state), 50);\n  }\n\n  intermediate() {\n    this.setState({\n      barsQuant: 8,\n      measure: \"four_quarters\",\n      pauseValue: 10,\n      easyOBProb: 35,\n      bpm: 70,\n      linkIns: true,\n      linkOut: 50,\n      lvl: 1,\n      beamNum: 1,\n      groupRest: false,\n      noteValues: {\n        whole: 5,\n        half: 11,\n        quarter: 44,\n        eighth: 56,\n        sixteenth: 64,\n        thirtySecond: 0\n      },\n      dottedValues: {\n        whole: -0.1,\n        half: 5,\n        quarter: 10,\n        eighth: 30,\n        sixteenth: 0,\n        thirtySecond: 0\n      },\n      simpleK: 75,\n      dotsK: 95,\n      mode: 2\n    });\n    setTimeout(() => updateData(this.state), 50);\n  }\n\n  expert() {\n    this.setState({\n      barsQuant: 16,\n      measure: \"four_quarters\",\n      pauseValue: 10,\n      easyOBProb: 17,\n      bpm: 90,\n      linkIns: false,\n      linkOut: 70,\n      lvl: 2,\n      beamNum: 1,\n      groupRest: true,\n      noteValues: {\n        whole: 5,\n        half: 11,\n        quarter: 20,\n        eighth: 56,\n        sixteenth: 64,\n        thirtySecond: 0\n      },\n      dottedValues: {\n        whole: -0.1,\n        half: 5,\n        quarter: 10,\n        eighth: 30,\n        sixteenth: 0,\n        thirtySecond: 0\n      },\n      groupingValues: {\n        whole: -0.1,\n        half: 3,\n        quarter: 10,\n        eighth: 12\n      },\n      easyGrouping: 95,\n      tripletValue: 90,\n      simpleK: 75,\n      dotsK: 80,\n      groupK: 100,\n      mode: 3\n    });\n    setTimeout(() => updateData(this.state), 50);\n  }\n\n  nextGen() {\n    console.clear();\n    wholeBar = 0;\n    let arr = [];\n    let tupletState;\n    this.setState({bars: generatingValues()});\n    setTimeout(() => {                              // RECORDING THE DURATION VALUES IS ARRAY\n      this.state.bars.forEach((x) => {\n      x.forEach((y) => {\n        if ((/triplet/).test(y[0])) {\n          tupletState = 0;\n        }\n        else if ((/quinteplet/).test(y[0])) {\n          tupletState = 1;\n        }\n\n        if (!(/triplet|quinteplet/).test(y[0]) && Array.isArray(y)) {\n          if (Array.isArray(y[0])) {\n            for (let n in y){\n              arr.push([y[n][0],valInTup[tupletState][y[n][0].match(/[a-z]+/).join(\"\")]])\n            }\n          }\n          else {\n            arr.push([y[0],y[1]])\n          }\n          \n        }\n      })\n    })\n\n    this.setState({receivedVal: arr})\n\n    }, 50);\n    switch (this.state.mode) {\n      case 1: this.setState({beat: true, beatNumb: true});\n      break;\n      case 2: this.setState({beat: true, beatNumb: false});\n      break;\n      case 3: this.setState({beat: false, beatNumb: false});\n      break;\n      default: return;\n    }\n  }\n\n  beat() {\n    this.setState({\n      beat: !this.state.beat\n    });\n  }\n\n  beatNumb() {\n    this.setState({\n      beatNumb: !this.state.beatNumb\n    })\n  }\n\n  beatReading(input) {\n    this.setState({metronomeSwitch: true});\n    this.setState({mistakes: null});\n    mistakes = 0;\n    metronome = [];\n    inputOpen = false;\n    beatReadN = 0;\n    beatFill  = 0;\n    rand = 0;\n    let metronomeFill = 0;\n\n    arr = Array.from(document.querySelectorAll(\".value\"));\n    arr.shift();\n\n    this.tick01.current.volume = 0.3;\n    this.tick02.current.volume = 0.2;\n    \n    wholeBar = measureReassign[this.state.measure] / (this.state.bpm / 60) * 1000;\n\n    this.tick01.current.play();\n\n    metronomeFill += wholeBar / measureReassign[this.state.measure];\n    \n    if (input === \"input\") {\n      metronome.push(setInterval(() => {\n        this.tick01.current.play();\n      }, wholeBar))\n      while (metronomeFill < wholeBar) {\n        metronome.push(setTimeout(() => {\n          this.tick02.current.play();\n          metronome.push(setInterval(() => this.tick02.current.play(), wholeBar)) \n        }, metronomeFill));\n        metronomeFill += wholeBar / measureReassign[this.state.measure];\n      }\n      metronome.push(setTimeout(this.stop, (this.state.barsQuant + 1) * wholeBar - 50) );\n    }\n    else {\n      while (metronomeFill < wholeBar) {\n            metronome.push(setTimeout(() => {\n              this.tick02.current.play();\n            }, metronomeFill)); \n            metronomeFill += wholeBar / measureReassign[this.state.measure];\n          }\n    }\n    \n    if (input === \"input\") {\n      metronome.push(setTimeout(this.beatInputFunc, wholeBar - 100));\n    }\n    else {\n      metronome.push(setTimeout(this.beatReadingFunc, wholeBar));\n      mistakes --;\n    }\n    \n  }\n\n  beatReadingFunc() {\n  if (beatFill > measureReassign[this.state.measure] - 0.1) {\n    beatFill = 0;\n  }\n    if (beatFill === measureReassign[this.state.measure]) {\n      beatFill = 0;\n    }\n\n    if (!beatReadN) {\n          arr[0].classList.toggle(\"value--animation\");\n          if (!(/--rest/).test(arr[beatReadN].className)) {\n            soundArr[0].play();\n            rand ++ \n          }\n          reading = setTimeout(this.beatReadingFunc, 1000 * this.state.receivedVal[beatReadN][1] / (this.state.bpm / 60));\n          \n        }\n    console.log(beatFill)\n    if (!beatFill || !beatReadN) {\n      let metronomeFill = 0;\n      let wholeBar = measureReassign[this.state.measure] / (this.state.bpm / 60) * 1000;\n\n      this.tick01.current.play();\n\n      metronomeFill += wholeBar / measureReassign[this.state.measure];\n      while (metronomeFill < wholeBar) {\n        metronome.push(setTimeout(() => {\n          this.tick02.current.play();\n        }, metronomeFill)); \n        metronomeFill += wholeBar / measureReassign[this.state.measure];\n    }\n    if (!beatReadN) {\n      beatFill += this.state.receivedVal[beatReadN][1];\n      beatReadN ++;\n      return;\n    }\n\n    }\n\n\n    if (beatReadN < arr.length-1) {\n      reading = setTimeout(this.beatReadingFunc, 1000 * this.state.receivedVal[beatReadN][1] / (this.state.bpm / 60));\n    }\n    else {\n      setTimeout(this.stop, 1000 * this.state.receivedVal[beatReadN][1] / (this.state.bpm / 60));\n    }\n    \n    arr[beatReadN].classList.toggle(\"value--animation\");\n\n    if (!(/--rest/).test(arr[beatReadN].className) && (!beatReadN || !(/^[\\d]/).test(this.state.receivedVal[beatReadN-1][0]))) {\n      soundArr[rand].play();\n    }\n    \n\n    beatFill += this.state.receivedVal[beatReadN][1];\n    beatReadN ++;\n    rand ++ \n    if (rand === soundArr.length-1) {\n      rand = 0;\n    }\n  }\n\n  beatInput() {\n    soundInd = 0;\n    this.setState({metronomeSwitch: true});\n    document.addEventListener(\"keydown\", this.beatInputListener);\n    this.beatReading(\"input\");\n  }\n\n  beatInputListener() {\n    if (inputOpen && !(/--rest/).test(arr[beatReadN].className) && (beatReadN === 0 || !(/^[\\d]/).test(this.state.receivedVal[beatReadN-1][0]))) {\n      arr[beatReadN].classList.toggle(\"value--animation\");\n      // soundArr[soundInd].play()\n      // soundInd ++\n      inputOpen = false;\n      // if (soundInd === soundArr.length-1) {\n      //   soundInd = 0;\n      // }\n    }\n    else if (!inputOpen || inputOpen && ((/--rest/).test(arr[beatReadN].className) || (beatReadN === 0 || (/^[\\d]/).test(this.state.receivedVal[beatReadN-1][0])) )) {\n      mistakes ++;\n      inputOpen = false;\n    }\n  }\n  \n  beatInputFunc() {\n    inputOpen = true;\n    metronome.push(setTimeout(() => {\n     if (inputOpen && (!(/--rest/).test(arr[beatReadN].className) && (beatReadN === 0 || !(/^[\\d]/).test(this.state.receivedVal[beatReadN-1][0]))) ) {\n      mistakes ++;\n     }\n    beatReadN ++;\n    inputOpen = false;\n    }, (1000 * this.state.receivedVal[beatReadN][1] / (this.state.bpm / 60)) * (inputPerc*3) / 100));\n    if (beatReadN < arr.length-1) {\n      reading = setTimeout(this.beatInputFunc, 1000 * this.state.receivedVal[beatReadN][1] / (this.state.bpm / 60));\n    }\n    \n    \n  }\n  \n  stop() {\n    this.setState({mistakes: mistakes});\n    document.removeEventListener(\"keydown\", this.beatInputListener);\n    this.setState({metronomeSwitch: false})\n    for (let n in metronome) {\n      clearTimeout(metronome[n]);\n      clearInterval(metronome[n]);\n    }\n\n    for (let n in arr) {\n      if (arr[n].classList.contains(\"value--animation\")) {\n        arr[n].classList.toggle(\"value--animation\")\n      }\n    }\n\n    clearTimeout(reading);\n  }\n\n  componentDidMount() {\n    updateData(this.state);\n\n    for (let i = 0; i < 20; i ++) {\n      let sound = this.note01.current;\n      sound.volume = 0.2;\n      soundArr.push(sound);\n      let soundClone = sound.cloneNode(true);\n      soundClone.volume = 0.2;\n      soundArr.push(soundClone);\n    }\n    \n  } \n  render() {\n    let bars = this.state.bars;\n    return (\n      <div>\n        <div>\n        <audio ref={this.tick01}>\n      <source src={tick01} type=\"audio/mpeg\"></source>\n        </audio>\n        <audio ref={this.tick02}>\n          <source src={tick02} type=\"audio/mpeg\"/>\n        </audio>\n        <audio ref={this.note01}>\n          <source src={note01} type=\"audio/mpeg\"/>\n        </audio>\n        </div>\n        <header>\n          <h1>Welcome to <strong>Score Gym</strong></h1>\n            <nav>\n              <div className=\"button__holder\">\n                <button disabled={this.state.mode === 1} className=\"button__lvl\" onClick={this.beginner}>Beginner</button>\n                <button disabled={this.state.mode === 2} className=\"button__lvl\" onClick={this.intermediate}>Intermediate</button>\n                <button disabled={this.state.mode === 3} className=\"button__lvl\" onClick={this.expert}>Expert</button> \n                </div>\n              <div></div>\n              <button onClick={this.nextGen} disabled={this.state.metronomeSwitch}>NextGen</button>\n              <button onClick={this.beat}>Beat</button>\n              <button disabled={!this.state.beat} onClick={this.beatNumb}>Num</button>\n              <button onClick={this.beatReading} disabled={this.state.bars.length < 1 || this.state.metronomeSwitch}>Reading</button>\n              <button onClick={this.stop} disabled={!this.state.metronomeSwitch}>Stop</button>\n              <button onClick={this.beatInput} disabled={this.state.bars.length < 1 || this.state.metronomeSwitch}>Practice</button>\n              <div style={{opacity: (this.state.mistakes !== null && mistakes >= 0) ? \"1\" : \"0\"}}>Mistakes: {this.state.mistakes}</div>\n            </nav>\n              <div className=\"settings\">SETTINGS: #measures, #number_of_bars, #bpm, #licked_notes</div>\n              <div className=\"info\">#Info, #tutorial</div>\n        </header>\n        <div className=\"score_body\">\n          <div className=\"score\">\n          {bars.map((x, index) => {\n            let beat = 0;\n            let count = 0;\n            return <div className={(bars.length-1 === index) ? \"bar bar_last\" : ((index === 0) ? \"bar bar_first\" : \"bar\")} key={String(index)}>\n              <div className=\"bar__inside\"> \n              {x.map((y, ind) => {\n\n                if (ind+1 <= x.length-1 && Array.isArray(x[ind+1][0])) {\n                  beat += y[1];\n                  return <div style={{position: \"relative\", height: \"118px\"}} key={String(index) + \"_\" + ind}>\n                    <span className=\"tuplet__num\">{(/triplet/).test(y[0]) ? 3 : 5}</span>\n                    {(( (ind === 0 && Array.isArray(y)) || (ind === 1 && beat === y[1]) || Number.isInteger(beat-y[1]) || (ind === x.length-1 && y[1] === this.state.beamNum) ) && count < measureReassign[this.state.measure] ? (<div key={beat+y[0]} className=\"beat\" style={this.state.beat ? ((/rest|whole/).test(y[0]) ? ({opacity: \"100%\", top:\"100%\", left:\"5px\"}) : ((/--end/).test(y[0]) ? ({opacity: \"100%\", left: \"10px\"}) : ({opacity: \"100%\"}))) : {opacity: \"0%\"}}><div style={this.state.beatNumb ? {opacity:\"1\"} : {opacity:\"0\"}}>{beat-y[1] + 1}</div><span style={{display: \"none\"}}>{count ++ }</span></div>) : null)}\n                    <div className={(/triplet/).test(y[0]) ? \"triplet\" : \"quinteplet\"}>\n                    {x[ind+1].map((z, indI) => {\n                      if (!indI) {\n                        return <div className={\"value \" + z[0]} style={{marginLeft: \"0\"}} key={z[0]+String(index) + indI}></div>\n                      }\n                      else if (indI === x[ind+1].length-1) {\n                        return <div className={\"value \" + z[0]} style={{marginRight: \"0\"}} key={z[0]+String(index) + indI}></div>\n                      }\n                      else {\n                        return <div className={\"value \" + z[0]} key={z[0]+String(index) + indI}></div>\n                      }\n                      \n                    })}\n                    </div>\n                    </div>\n                }\n\n                else if (Array.isArray(y[0])) {\n                  return;\n                }\n\n                else {\n                let link = null;\n               if (Array.isArray(y) && (y[0][0] === '0' || y[0][0] === '1')) { // DETERMINING WHERE IS THE LINK\n                 let elem = y[0].split(\"\");\n                 link = Number(elem.slice(0, 1));\n                 y[0] = elem.join(\"\");\n               }\n               let ch;\n               if (Array.isArray(y)) {                    // CORRECTING THE POSITION OF THE LINK\n                 let elem = y[0].split(\"\");\n                 elem.reverse();\n                 ch = elem.slice(0, 3)\n                          .join(\"\");\n                beat += y[1];\n               }\n                return <div className={Array.isArray(y) ? (\"value \" + y[0].match(/\\D+[\\d]*.+/).join(\"\")) : (\"value  \" + this.state.measure)} key={index+ind + y[0]}>\n                  <Linked link={link} ch={ch} ind={ind} bars={this.state.bars} />\n                  {(( (ind === 0 && Array.isArray(y)) ||( ind === 1 && beat === y[1]) || Number.isInteger(beat-y[1]) || (ind === x.length-1 && y[1] === this.state.beamNum) ) && count < measureReassign[this.state.measure] ? (<div key={beat+y[0]} className=\"beat\" style={this.state.beat ? ((/rest|whole/).test(y[0]) ? ({opacity: \"100%\", top:\"100%\", left:\"5px\"}) : ((/--end/).test(y[0]) ? ({opacity: \"100%\", left: \"10px\"}) : ({opacity: \"100%\"}))) : {opacity: \"0%\"}}><div style={this.state.beatNumb ? {opacity:\"1\"} : {opacity:\"0\"}}>{beat-y[1] + 1}</div><span style={{display: \"none\"}}>{count ++ }</span></div>) : null)}\n                  </div>\n                }\n            })}\n            </div>\n            </div>\n            \n          })\n          }\n\n          </div>\n\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nclass Linked extends React.Component {\nshouldComponentUpdate(nextState) {\n  if (this.props.bars !== nextState.bars) {\n    return true;\n  }\n  else {\n    return false;\n  }\n}\nrender () {\n  let st = null;\n  if (this.props.ch === \"dne\" && this.props.link === 0) {\n    st = {left: \"38px\", width: \"15px\",top: \"-21px\",height: \"40px\"}\n  }\n\n  return <div>{(this.props.link !== null) ? (<div style={st} key={this.props.ch+this.props.ind} className={(this.props.link===0) ? \"linked_in\" : \"linked_out\"}></div>) : null}</div>\n}\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}